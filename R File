# Load the readr, ggplot2, and dplyr packages
library(readr)
library(ggplot2)
library(dplyr)

# Read datasets/confirmed_cases_worldwide.csv into confirmed_cases_worldwide
confirmed_cases_worldwide <- read_csv("datasets/confirmed_cases_worldwide.csv")

# See the result
confirmed_cases_worldwide

# Draw a line plot of cumulative cases vs. date
# Label the y-axis
# Draw a line plot of cumulative cases vs. date
# Label the y-axis
ggplot(confirmed_cases_worldwide, aes(date, cum_cases)) +
  geom_area() +
  ylab("Cumulative confirmed cases")

#===========================================Module1=====================================================

# Read in datasets/confirmed_cases_china_vs_world.csv
confirmed_cases_china_vs_world <- read_csv("datasets/confirmed_cases_china_vs_world.csv")

# See the result
glimpse(confirmed_cases_china_vs_world)

# Draw a line plot of cumulative cases vs. date, grouped and colored by is_china
# Define aesthetics within the line geom
plt_cum_confirmed_cases_china_vs_world <- ggplot(confirmed_cases_china_vs_world) +
  geom_line(aes(date, cum_cases, group = is_china, color = is_china)) +
  theme_bw()
  ylab("Cumulative confirmed cases")

# See the plot
plt_cum_confirmed_cases_china_vs_world

#===========================================Module2======================================================

who_events <- tribble(
  ~ date, ~ event,
  "2020-01-30", "Global health\nemergency declared",
  "2020-03-11", "Pandemic\ndeclared",
  "2020-02-13", "China reporting\nchange"
) %>%
  mutate(date = as.Date(date))

# Using who_events, add vertical dashed lines with an xintercept at date
# and text at date, labeled by event, and at 100000 on the y-axis
plt_cum_confirmed_cases_china_vs_world +
  geom_vline(aes(xintercept = date), data = who_events, linetype = "twodash") +
  geom_text(aes(date, label = event), data = who_events, y = 1e5)+
  theme_light()

#===========================================Module3======================================================

# Filter for China, from Feb 15
china_after_feb15 <- confirmed_cases_china_vs_world %>%
  filter(is_china == "China", date >= "2020-02-15")

# Using china_after_feb15, draw a line plot cum_cases vs. date
# Add a smooth trend line using linear regression, no error bars
ggplot(china_after_feb15, aes(date, cum_cases)) +
  geom_line() +
  geom_smooth(method = "lm", se = FALSE) +
  ylab("Cumulative confirmed cases")+xlab("Showing China's Report")

# Filter confirmed_cases_china_vs_world for not China
not_china <- confirmed_cases_china_vs_world %>%
  filter(is_china == "Not China")

# Using not_china, draw a line plot cum_cases vs. date
# Add a smooth trend line using linear regression, no error bars
plt_not_china_trend_lin <- ggplot(not_china, aes(date, cum_cases)) +
  geom_line() +
  geom_smooth(method = "lm", se = FALSE) +
  ylab("Cumulative confirmed cases")+ xlab("Apart from China")

# See the result
plt_not_china_trend_lin 

plt_not_china_trend_lin + 
  scale_y_log10()
#===========================================Module4======================================================

confirmed_cases_India <- read.csv("datasets/state.csv")

glimpse(confirmed_cases_India)

confirmed_cases_India$Date <- as.Date(confirmed_cases_India$Date,format = "%m/%d/%y")

ggplot(confirmed_cases_India, aes(Date, Cases, color = State, group = State)) +
  geom_line()+
  facet_wrap(facets = vars(State))+
  theme(axis.text.x = element_blank(),axis.ticks.x = element_blank())+
  ylab("Cumulative confirmed cases")+
  xlab("Cases of Top 5 States in India in the month of November")

#===========================================Module5=======================================================

# Read in the dataset from datasets/confirmed_cases_top7_outside_china.csv
confirmed_cases_top5_gujarat <- read_csv("datasets/districts.csv")

confirmed_cases_top5_gujarat$date <- as.Date(confirmed_cases_top5_gujarat$date,format = "%d/%m/%y")

# Glimpse the contents of confirmed_cases_top7_outside_china
glimpse(confirmed_cases_top5_gujarat)

# Using confirmed_cases_top7_outside_china, draw a line plot of
# cum_cases vs. date, grouped and colored by country
ggplot(confirmed_cases_top5_gujarat, aes(date, cum_cases, color = City, group = City)) +
  geom_line()+
  facet_grid(rows = vars(City))+
  theme(axis.text.x = element_blank(),axis.ticks.x = element_blank())+
  ylab("Cumulative confirmed cases")+
  xlab("Apr            May            Jun            Jul           Aug           Sept           Oct           Nov")



#===========================================Module6=======================================================

